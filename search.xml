<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Test: Hello World!</title>
    <url>/2020/08/17/Test-Hello-World/</url>
    <content><![CDATA[<h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World!"></a>Hello World!</h1><h2 id="这是一次测试！"><a href="#这是一次测试！" class="headerlink" title="这是一次测试！"></a>这是一次测试！</h2><p>To be continue…</p>
]]></content>
      <categories>
        <category>Hello World</category>
      </categories>
      <tags>
        <tag>Hello World</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/08/16/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>jsDelivr+GitHub+PicGo搭建免费图床</title>
    <url>/2020/09/15/%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h2 id="一、概念简介"><a href="#一、概念简介" class="headerlink" title="一、概念简介"></a>一、概念简介</h2><h3 id="1-图床"><a href="#1-图床" class="headerlink" title="1.图床"></a>1.图床</h3><blockquote>
<p>图床一般是指储存图片的服务器，有国内和国外之分。国外的图床由于有空间距离等因素决定访问速度很慢影响图片显示速度。国内也分为单线空间、多线空间和cdn加速三种。简而言之，就是能提供一些可以把图片存放到网上并且引用到其他网站使用的服务。</p>
</blockquote>
<h3 id="2-CDN"><a href="#2-CDN" class="headerlink" title="2.CDN"></a>2.CDN</h3><blockquote>
<p>CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。</p>
</blockquote>
<h3 id="3-jsDelivr"><a href="#3-jsDelivr" class="headerlink" title="3.jsDelivr"></a>3.jsDelivr</h3><blockquote>
<p>jsDelivr 是一个提供含JavaScript库、jQuery插件、CSS框架、字体等Web上常用静态资源的免费开源的 CDN 解决方案。其采用全球CDN加速，确保每个地区的使用者都能获得最好的连接速度，而在大陆地区使用了国内的CDN加速。因此jsDelivr在大陆也有很好的响应速度，jsDelivr可将不同的JavaScript或CSS libraries集合在一起使用，同时，jsDelivr也提供包括npm、GitHub、WordPress等项目的镜像服务。</p>
</blockquote>
<h3 id="4-Github"><a href="#4-Github" class="headerlink" title="4.Github"></a>4.Github</h3><blockquote>
<p>GitHub 是一个面向开源及私有软件项目的托管平台。额，这个不必多说。</p>
</blockquote>
<h3 id="5-PicGo"><a href="#5-PicGo" class="headerlink" title="5.PicGo"></a>5.PicGo</h3><blockquote>
<p>PicGo 是一款开源跨平台的免费图片上传工具以及图床相册管理软件，它能帮你快速地将图片上传到微博、又拍云、阿里云 OSS、腾讯云 COS、七牛、GitHub、sm.ms、Imgur 等常见的免费图床网站或云存储服务上，并自动复制图片的链接到剪贴板里，使用起来高效便捷。<a href="https://github.com/Molunerfinn/PicGo/releases">下载地址</a></p>
</blockquote>
<h2 id="二、搭建步骤"><a href="#二、搭建步骤" class="headerlink" title="二、搭建步骤"></a>二、搭建步骤</h2><h3 id="1-新建图床仓库"><a href="#1-新建图床仓库" class="headerlink" title="1.新建图床仓库"></a>1.新建图床仓库</h3><p>在github上新建一个仓库，作为图床仓库。<br><img src= "/img/loading.gif" data-lazy-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL0tldmluQ2h1MTk5OC9GaWd1cmVCZWQvQmxvZ1BpYy9ibG9nMjAyMDA3MzBfZmlndXJlYmVkXzAwMS5wbmc?x-oss-process=image/format,png"></p>
<h3 id="2-新建一个访问令牌-access-token"><a href="#2-新建一个访问令牌-access-token" class="headerlink" title="2.新建一个访问令牌(access token)"></a>2.新建一个访问令牌(access token)</h3><p>在github上点击Settings&gt;&gt; Developer settings &gt;&gt; Personal access tokens &gt;&gt; Generate new token ，勾选repo项，然后点击Generate token生成一个token。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL0tldmluQ2h1MTk5OC9GaWd1cmVCZWQvQmxvZ1BpYy9ibG9nMjAyMDA3MzBfZmlndXJlYmVkXzAwMi5wbmc?x-oss-process=image/format,png"><br><img src= "/img/loading.gif" data-lazy-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL0tldmluQ2h1MTk5OC9GaWd1cmVCZWQvQmxvZ1BpYy9ibG9nMjAyMDA3MzBfZmlndXJlYmVkXzAwMy5wbmc?x-oss-process=image/format,png"></p>
<p>需要记录一下这个token（先不着急关闭该页面，这个token只会显示一次），在后面配置PicGo时候会用到。<br><img src= "/img/loading.gif" data-lazy-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL0tldmluQ2h1MTk5OC9GaWd1cmVCZWQvQmxvZ1BpYy9ibG9nMjAyMDA3MzBfZmlndXJlYmVkXzAwNC5wbmc?x-oss-process=image/format,png"></p>
<h3 id="3-配置PicGo"><a href="#3-配置PicGo" class="headerlink" title="3.配置PicGo"></a>3.配置PicGo</h3><p>首先下载安装完PicGo（<a href="https://github.com/Molunerfinn/PicGo/releases">下载地址</a>）。<br>打开并配置picgo，图床设置&gt;&gt;GitHub图床：<br><img src= "/img/loading.gif" data-lazy-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL0tldmluQ2h1MTk5OC9GaWd1cmVCZWQvQmxvZ1BpYy9ibG9nMjAyMDA3MzBfZmlndXJlYmVkXzAwNS5wbmc?x-oss-process=image/format,png"><br><strong>设定仓库名</strong>： 格式为：用户名 / 图床仓库名<br><strong>设定分支名</strong>： master<br><strong>设定Token</strong>： 之前创建的Token<br><strong>指定存储路径</strong>： 在仓库里的路径，如【BlogPic/】，即会在仓库里新建一个名为BlogPic的文件夹来存放上传的图片。<br> <strong>设定自定义域名</strong>：此处填写的内容会决定你的图片的访问链接，你上传的图片之后可以通过【此处填写的内容/图片路径】的形式来访问（图片路径指仓库里的存储文件夹/图片名称）。由于图片是上传到GitHub仓库中的，所以图片路径理应是【https：//github.com/用户名/仓库名/文件夹名/图片名】，但我们还需要通过免费的CDN——JSDelivr来加速图片（jsDelivr 提供加速 GitHub 仓库的域名 cdn.jsdelivr.net/gh），故此处应填写成【https：//cdn.jsdelivr.net/gh/用户名/图床仓库名】。之后便可通过【https：//cdn.jsdelivr.net/gh/用户名/图床仓库名/文件夹名/图片名】来加速访问图片。</p>
<h2 id="三、使用"><a href="#三、使用" class="headerlink" title="三、使用"></a>三、使用</h2><h3 id="1-上传图片"><a href="#1-上传图片" class="headerlink" title="1.上传图片"></a>1.上传图片</h3><p>按照以上步骤配置完成以后，可以直接将需要上传的本地图片拖进PicGo的上传区，即可将该图片上传至GitHub图床仓库的存储文件夹内。<br><img src= "/img/loading.gif" data-lazy-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL0tldmluQ2h1MTk5OC9GaWd1cmVCZWQvQmxvZ1BpYy9ibG9nMjAyMDA3MzBfZmlndXJlYmVkXzAwNi5wbmc?x-oss-process=image/format,png" alt="在这里插入图片描述"></p>
<h3 id="2-使用链接访问图片"><a href="#2-使用链接访问图片" class="headerlink" title="2.使用链接访问图片"></a>2.使用链接访问图片</h3><p>可以在PicGo的相册里快捷获得最近上传的图片的链接复制，或者通过【https：//cdn.jsdelivr.net/gh/用户名/图床仓库名/文件夹名/图片名】的方式访问图片或将其引用至博客等需要使用的地方。<br><img src= "/img/loading.gif" data-lazy-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL0tldmluQ2h1MTk5OC9GaWd1cmVCZWQvQmxvZ1BpYy9ibG9nMjAyMDA3MzBfZmlndXJlYmVkXzAwNy5wbmc?x-oss-process=image/format,png"></p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>PicGo</tag>
        <tag>jsDelivr</tag>
        <tag>图床</tag>
      </tags>
  </entry>
</search>
